class Node {
    int data;
    Node next;

    Node(int value) {
        data = value;
        next = null;
    }
}

class CircularLinkedList {
    Node head = null;
    Node tail = null;

    void insert(int value) {
        Node newNode = new Node(value);
        if (head == null) {
            head = newNode;
            tail = newNode;
            newNode.next = head;
        } else {
            tail.next = newNode;
            tail = newNode;
            tail.next = head;
        }
    }

    void display() {
        if (head == null) {
            System.out.println("List is empty");
            return;
        }
        Node temp = head;
        do {
            System.out.print(temp.data + " ");
            temp = temp.next;
        } while (temp != head);
        System.out.println();
    }

    void search(int key) {
        if (head == null) {
            System.out.println("List is empty");
            return;
        }
        Node temp = head;
        int pos = 1;

        do {
            if (temp.data == key) {
                System.out.println("Value " + key + " found at position " + pos);
               return;
            }
            temp = temp.next;
            pos++;
        } while (temp != head);

            System.out.println("Value " + key + " not found");
        
    }
}

class Main {
    public static void main(String[] args) {
        CircularLinkedList list = new CircularLinkedList();
        list.insert(10);
        list.insert(20);
        list.insert(30);
        list.insert(40);

        System.out.println("Circular Linked List:");
        list.display();

        list.search(30);
        list.search(50);
    }
}
